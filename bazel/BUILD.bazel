# Bazel build environment image.

load("//:constants.bzl", "DEBIAN_JAVA_11")
load("//:defs.bzl", "container_commit_install_apt_packages")
load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image",
    "container_layer",
    "container_push",
)

JAVA = DEBIAN_JAVA_11

BASE_IMAGE = "@ubuntu_18_04//image"

# Bazel requires zip/unzip, a C++ compiler, and a JDK.
# See https://docs.bazel.build/versions/3.7.0/install-ubuntu.html#step-1-install-required-packages
BAZEL_DEPS = [
    "clang-10",
    "openjdk-11-jdk-headless",
    "unzip",
    "zip",
]

container_commit_install_apt_packages(
    name = "apt_packages",
    image = BASE_IMAGE,
    packages = [
        "git",
        "python3",
        "swig",
        "tzdata",  # For Cloud Spanner Emulator.
    ] + BAZEL_DEPS,
    upgrade = True,
)

container_layer(
    name = "bazelisk_binary",
    directory = "/usr/bin",
    files = [
        "@bazelisk//file",
    ],
    mode = "0o755",
    symlinks = {"/usr/bin/bazel": "/usr/bin/bazelisk"},
)

container_layer(
    name = "cue_binary",
    directory = "/opt/cue",
    symlinks = {"/usr/bin/cue": "/opt/cue/cue"},
    tars = ["@cue//file"],
)

container_image(
    name = "bazel_image",
    base = BASE_IMAGE,
    env = JAVA.env,
    layers = [
        ":apt_packages",
        ":bazelisk_binary",
        ":cue_binary",
    ],
    stamp = True,
    symlinks = {
        "/usr/bin/clang": "/usr/bin/clang-10",
        "/usr/bin/python": "/usr/bin/python3",
    },
)

container_push(
    name = "push_bazel_image",
    format = "Docker",
    image = ":bazel_image",
    registry = "docker.io",
    repository = "wfameasurement/bazel",
)

container_push(
    name = "push_bazel_image_gcr",
    format = "Docker",
    image = ":bazel_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/bazel",
)
