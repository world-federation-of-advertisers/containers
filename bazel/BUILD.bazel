# Bazel build environment image.

load("//:constants.bzl", "DEBIAN_JAVA_11")
load("//:defs.bzl", "container_commit_add_apt_key", "container_commit_install_apt_packages")
load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image",
    "container_layer",
    "container_push",
)

JAVA = DEBIAN_JAVA_11

BASE_IMAGE = "@ubuntu_20_04//image"

# Bazel requires zip/unzip, a C++ compiler, and a JDK.
# See https://docs.bazel.build/versions/3.7.0/install-ubuntu.html#step-1-install-required-packages
BAZEL_DEPS = [
    "clang",
    "openjdk-11-jdk-headless",
    "unzip",
    "zip",
]

CLOUD_SDK_DEPS = [
    "apt-transport-https",
    "ca-certificates",
    "gnupg",
]

container_commit_install_apt_packages(
    name = "apt_packages",
    image = BASE_IMAGE,
    packages = [
        "git",
        "python3",
        "python-is-python3",
        "swig",
        "tzdata",  # For Cloud Spanner Emulator.
    ] + BAZEL_DEPS + CLOUD_SDK_DEPS,
    upgrade = True,
)

container_layer(
    name = "cloud_sdk_apt_key",
    directory = "/tmp",
    files = ["@cloud_sdk_apt_key//file"],
)

container_image(
    name = "cloud_sdk_apt_key_image",
    base = BASE_IMAGE,
    layers = [
        ":apt_packages",
        ":cloud_sdk_apt_key",
    ],
)

container_commit_add_apt_key(
    name = "cloud_sdk_apt_keyring",
    image = ":cloud_sdk_apt_key_image.tar",
    key_path = "/tmp/cloud-sdk-apt-key.gpg",
    keyring_path = "/usr/share/keyrings/cloud.google.gpg",
)

container_layer(
    name = "cloud_sdk_apt_source",
    directory = "/etc/apt/sources.list.d",
    files = ["google-cloud-sdk.list"],
)

container_image(
    name = "cloud_sdk_apt_image",
    base = BASE_IMAGE,
    layers = [
        ":apt_packages",
        ":cloud_sdk_apt_keyring",
        ":cloud_sdk_apt_source",
    ],
)

container_commit_install_apt_packages(
    name = "cloud_sdk_apt_packages",
    image = ":cloud_sdk_apt_image.tar",
    packages = [
        "google-cloud-sdk",
        "kubectl",
    ],
)

container_layer(
    name = "bazelisk_binary",
    directory = "/usr/bin",
    files = [
        "@bazelisk//file",
    ],
    mode = "0o755",
    symlinks = {"/usr/bin/bazel": "/usr/bin/bazelisk"},
)

container_layer(
    name = "cue_binary",
    directory = "/opt/cue",
    symlinks = {"/usr/bin/cue": "/opt/cue/cue"},
    tars = ["@cue//file"],
)

container_layer(
    name = "liquibase",
    directory = "/opt/liquibase",
    symlinks = {"/usr/bin/liquibase": "/opt/liquibase/liquibase"},
    tars = ["@liquibase//file"],
)

container_layer(
    name = "liquibase_spanner",
    directory = "/opt/liquibase/lib",
    files = ["@liquibase_spanner//file"],
)

container_image(
    name = "bazel_image",
    base = BASE_IMAGE,
    env = JAVA.env,
    layers = [
        ":apt_packages",
        ":bazelisk_binary",
        ":cloud_sdk_apt_packages",
        ":cue_binary",
        ":liquibase",
        ":liquibase_spanner",
    ],
    stamp = "@io_bazel_rules_docker//stamp:always",
)

container_push(
    name = "push_bazel_image",
    format = "Docker",
    image = ":bazel_image",
    registry = "docker.io",
    repository = "wfameasurement/bazel",
)

container_push(
    name = "push_bazel_image_gcr",
    format = "Docker",
    image = ":bazel_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/bazel",
)
