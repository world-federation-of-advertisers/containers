# Copyright 2021 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, edited]
  workflow_dispatch:

jobs:
  build-test:
    name: Build and test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Bazel
        run: |
          mkdir -p ~/.local/bin
          bazelisk_path="$(which bazelisk)"
          ln -s "${bazelisk_path}" ~/.local/bin/bazel

      - name: Get Bazel cache params
        id: get-cache-params
        uses: world-federation-of-advertisers/actions/bazel-get-cache-params@v2

      - name: Restore Bazel cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ steps.get-cache-params.outputs.cache-path }}
          key: ${{ steps.get-cache-params.outputs.cache-key }}
          restore-keys: |-
            ${{ steps.get-cache-params.outputs.restore-key }}

      - name: Build
        run: bazel build //...

      - name: Run tests
        id: run-tests
        run: bazel test //... || (( "$?" == 4 ))

      - name: Save Bazel cache
        uses: actions/cache/save@v3
        continue-on-error: true
        with:
          path: ${{ steps.get-cache-params.outputs.cache-path }}
          key: ${{ steps.get-cache-params.outputs.cache-key }}

      - name: Upload Bazel testlogs
        uses: world-federation-of-advertisers/actions/bazel-upload-testlogs@v2
        continue-on-error: true
        if: failure() && steps.run-tests.outcome == 'failure'
